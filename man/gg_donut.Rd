% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_donut.R
\name{gg_donut}
\alias{gg_donut}
\title{gg_donut}
\usage{
gg_donut(
  data1,
  freq,
  categ,
  fill.palette = NULL,
  fill.color = NULL,
  hole.size = 0.5,
  hole.text = TRUE,
  hole.text.size = 14,
  border.color = "gray50",
  border.size = 0.2,
  title = "",
  title.text.size = 7,
  annotation = NULL,
  annotation.distance = 0,
  annotation.size = 3,
  annotation.force = 1,
  annotation.force.pull = 100,
  legend.show = TRUE,
  legend.width = 0.25,
  legend.name = NULL,
  legend.text.size = 10,
  legend.box.size = 5,
  legend.box.space = 2,
  legend.limit = NULL,
  legend.add.prop = FALSE,
  add = NULL,
  return = FALSE,
  return.ggplot = FALSE,
  return.gtable = TRUE,
  plot = TRUE,
  warn.print = TRUE,
  lib.path = NULL,
  safer_check = TRUE
)
}
\arguments{
\item{data1}{a dataframe compatible with ggplot2.}

\item{freq}{single character string of the data1 column name of the frequencies.}

\item{categ}{single character string of the data1 column name of categories (qualitative variable).}

\item{fill.palette}{single character string of a palette name (see ?ggplot2::scale_fill_brewer() for the list).Ignored if fill.color is not NULL.}

\item{fill.color}{either (1) NULL, or (2) a vector of character strings or integers of same length as the number of classes in categ. Colors can be color names (see ?colors() in R), hexadecimal color codes, or integers (according to the ggplot2 palette). The order of the elements will be used according to the frequency values, from highest to lowest. An easy way to use this argument is to sort data1 according to the frequencies values, add a color column with the corresponding desired colors and use the content of this column as values of fill.color. If color is NULL and fill.palette is NULL, default colors of ggplot2 are used. If color is not NULL, it overrides fill.palette.}

\item{hole.size}{single positive proportion of donut central hole, 0 meaning no hole (pie chart) and 1 no plot (donut with a null thickness).}

\item{hole.text}{logical (either TRUE or FALSE). Display the sum of frequencies (column of data1 indicated in the freq argument).}

\item{hole.text.size}{single positive numeric value of the title font size in mm. Ignored if hole.text is FALSE}

\item{border.color}{a single character string or integer. Colors can be color names (see ?colors() in R), hexadecimal color codes, or integers (according to the ggplot2 palette).}

\item{border.size}{a single positive numeric value in mm.}

\item{title}{single character string of the graph title.}

\item{title.text.size}{single numeric value of the title font size in mm.}

\item{annotation}{single character string of the data1 column name of annotations. Values inside this column will be displayed over the corresponding slices of the donut. Write NULL if not required.}

\item{annotation.distance}{single positive numeric value of the distance from the center of the slice. 0 means center of the slice, 0.5 means at the edge. Above 0.5, the donut will be reduced to make place for the annotation. Ignored if annotation is NULL.}

\item{annotation.size}{single positive numeric value of the annotation font size in mm. Ignored if annotation is NULL.}

\item{annotation.force}{single positive numeric value of the force of repulsion between overlapping text labels. See ?ggrepel::geom_text_repel() in R. Ignored if annotation is NULL.}

\item{annotation.force.pull}{single positive numeric value of the force of attraction between a text label and its corresponding data point. See ?}

\item{legend.show}{logical (either TRUE or FALSE). Show legend?.}

\item{legend.width}{single proportion (between 0 and 1) indicating the relative width of the legend sector (on the right of the plot) relative to the width of the plot. Value 1 means that the window device width is split in 2, half for the plot and half for the legend. Value 0 means no room for the legend, which will overlay the plot region. Write NULL to inactivate the legend sector. In such case, ggplot2 will manage the room required for the legend display, meaning that the width of the plotting region can vary between graphs, depending on the text in the legend.}

\item{legend.name}{character string of the legend title. If legend.name is NULL then legend.name is the value of the categ argument. Write legend.name = "" to remove the legend.}

\item{legend.text.size}{single numeric value of the font size in mm of the legend labels.}

\item{legend.box.size}{single numeric value of the size of the legend squares in mm.}

\item{legend.box.space}{single numeric value of the space between the legend boxes in mm.}

\item{legend.limit}{single positive proportion of the classes displayed in the legend for which the corresponding proportion is over legend.limit. Write NULL to display all the classes.}

\item{legend.add.prop}{logical (either TRUE or FALSE). add the proportion after the class names in the legend ?}

\item{add}{character string allowing to add more ggplot2 features (dots, lines, themes, facet, etc.). Ignored if NULL. WARNING: (1) the string must start with "+", (2) the string must finish with ")" and (3) each function must be preceded by "ggplot2::". Example: "+ ggplot2::coord_flip() + ggplot2::theme_bw()". If the character string contains the "ggplot2::theme" string, then the article argument of gg_donut() (see above) is ignored with a warning. In addition, some arguments can be overwritten, like x.angle (check all the arguments). Handle the add argument with caution since added functions can create conflicts with the preexisting internal ggplot2 functions. The call of objects inside the quotes of add can lead to an error if the name of these objects are some of the gg_donut() arguments. Indeed, the function will use the internal argument instead of the global environment object. Example article <- "a" in the working environment and add = '+ ggplot2::ggtitle(article)'. The risk here is to have TRUE as title. To solve this, use add = '+ ggplot2::ggtitle(get("article", envir = .GlobalEnv))'}

\item{return}{logical (either TRUE or FALSE). Return the graph parameters?}

\item{return.ggplot}{logical (either TRUE or FALSE). Return the ggplot object in the output list? Ignored if return argument is FALSE. WARNING: always assign the gg_donut() function (e.g., a <- gg_donut()) into something if the return.ggplot argument is TRUE, otherwise, double plotting is performed. See $ggplot in the RETURN section below for more details.}

\item{return.gtable}{logical (either TRUE or FALSE). Return the full graph (main, title and legend) as a gtable of grobs in the output list? See $gtable in the RETURN section below for more details.}

\item{plot}{logical (either TRUE or FALSE). Plot the graphic? If FALSE and return argument is TRUE, graphical parameters and associated warnings are provided without plotting.}

\item{warn.print}{logical (either TRUE or FALSE). Print warnings at the end of the execution? ? If FALSE, warning messages are never printed, but can still be recovered in the returned list. Some of the warning messages (those delivered by the internal ggplot2 functions) are not apparent when using the argument plot = FALSE.}

\item{lib.path}{vector of character strings indicating the absolute path of the required packages (see below). if NULL, the function will use the R library default folders.}

\item{safer_check}{Single logical value. Perform some "safer" checks (see https://github.com/safer-r)? If TRUE, checkings are performed before main code running: 1) R classical operators (like "<-") not overwritten by another package because of the R scope and 2) required functions and related packages effectively present in local R lybraries. Must be set to FALSE if this fonction is used inside another "safer" function to avoid pointless multiple checkings.}
}
\value{
a donut plot if plot argument is TRUE.

a list of the graph info if return argument is TRUE:
$data: the initial data with modifications and with graphic information added
$removed.row.nb: a list of the removed rows numbers in data frames (because of NA). NULL if no row removed
$removed.rows: a list of the removed rows in data frames (because of NA). NULL if no row removed
$plot.data
$panel: the variable names used for the panels (NULL if no panels). WARNING: NA can be present according to ggplot2 upgrade to v3.3.0
$axes: the x-axis and y-axis info
$warn: the warning messages. Use cat() for proper display. NULL if no warning. WARNING: warning messages delivered by the internal ggplot2 functions are not apparent when using the argument plot = FALSE
$ggplot: ggplot object that can be used for reprint (use print($ggplot) or update (use $ggplot + ggplot2::...). NULL if return.ggplot argument is FALSE. Warning: the legend is not in $ggplot as it is in a separated grob (use $gtable to get it). Of note, a non-null $ggplot in the output list is sometimes annoying as the manipulation of this list prints the plot
$gtable: gtable object that can be used for reprint (use gridExtra::grid.arrange(...$ggplot) or with additionnal grobs (see the grob decomposition in the examples). Contrary to $ggplot, a non-NULL $gtable in the output list is not annoying as the manipulation of this list does not print the plot
}
\description{
Plot a ggplot2 donut using contingency data, systematically in the decreasing order of frequencies, starting at the top and turning clockwise. 
For ggplot2 specifications, see: https://ggplot2.tidyverse.org/articles/ggplot2-specs.html.
}
\details{
- Rows containing NA in data1[, c(freq, categ)] will be removed before processing, with a warning (see below).
- Size arguments (hole.text.size, border.size, title.text.size and annotation.size) are in mm. See Hadley comment in https://stackoverflow.com/questions/17311917/ggplot2-the-unit-of-size. See also http://sape.inf.usi.ch/quick-reference/ggplot2/size). Unit object are not accepted, but conversion can be used (e.g., grid::convertUnit(grid::unit(0.2, "inches"), "mm", valueOnly = TRUE)).
}
\examples{
obs1 <- data.frame(Km = c(20, 10, 1, 5), Car = c("TUUT", "WIIM", "BIP", "WROUM"), Color1 = 1:4, color2 = c("red", "blue", "green", "black"), Country = c("FR", "UK", "US", NA), stringsAsFactors = TRUE) ; gg_donut(data1 = obs1, freq = "Km", categ = "Car", annotation = "Country")
}
