% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_heatmap.R
\name{gg_heatmap}
\alias{gg_heatmap}
\title{gg_heatmap}
\usage{
gg_heatmap(
  data1,
  legend.name1 = "",
  low.color1 = "blue",
  mid.color1 = "white",
  high.color1 = "red",
  limit1 = NULL,
  midpoint1 = NULL,
  data2 = NULL,
  color2 = "black",
  alpha2 = 0.5,
  invert2 = FALSE,
  text.size = 12,
  title = "",
  title.text.size = 12,
  show.scale = TRUE,
  rotate = FALSE,
  return = FALSE,
  plot = TRUE,
  add = NULL,
  warn.print = FALSE,
  lib.path = NULL,
  safer_check = TRUE
)
}
\arguments{
\item{data1}{numeric matrix or data frame resulting from the conversion of the numeric matrix by reshape2::melt().}

\item{legend.name1}{character string of the data1 heatmap scale legend.}

\item{low.color1}{character string of the color (i.e., "blue" or "#0000FF") of the lowest scale value.}

\item{mid.color1}{same as low.color1 but for the middle scale value. If NULL, the middle color is the default color between low.color1 and high.color1. BEWARE: argument midpoint1 is not ignored, even if mid.color1 is NULL, meaning that the default mid color can still be controled.}

\item{high.color1}{same as low.color1 but for the highest scale value.}

\item{limit1}{2 numeric values defining the lowest and higest color scale values. If NULL, take the range of data1 values. Warning values are sorted by the function. Thus, use the low.color1 and high.color1 to reverse the scale color if necessary.}

\item{midpoint1}{single numeric value defining the value corresponding to the mid.color1 argument. A warning message is returned if midpoint1 does not correspond to the mean of limit1 values, because the color scale is not linear anymore. If NULL, takes the mean of limit1 values. Mean of data1, instead of mean of limit1, can be used here if required.}

\item{data2}{binary mask matrix (made of 0 and 1) of same dimension as data1 or a data frame resulting from the conversion of the binary mask matrix by reshape2::melt(). Value 1 of data2 will correspond to color2 argument (value 0 will be NA color), and the opposite if invert2 argument is TRUE (inverted mask).}

\item{color2}{color of the 1 values of the binary mask matrix. The 0 values will be color NA.}

\item{alpha2}{numeric value (from 0 to 1) of the mask transparency.}

\item{invert2}{logical. Invert the mask (1 -> 0 and 0 -> 1)?.}

\item{text.size}{numeric value of the size of the texts in scale.}

\item{title}{character string of the graph title.}

\item{title.text.size}{numeric value of the title size (in points).}

\item{show.scale}{logical. Show color scale?.}

\item{rotate}{logical. Rotate the heatmap 90Â° clockwise?.}

\item{return}{logical. Return the graph parameters?.}

\item{plot}{logical. Plot the graphic? If FALSE and return argument is TRUE, graphical parameters and associated warnings are provided without plotting.}

\item{add}{character string allowing to add more ggplot2 features (dots, lines, themes, etc.). BEWARE: (1) must start with "+" just after the simple or double opening quote (no space, end of line, carriage return, etc., allowed), (2) must finish with ")" just before the simple or double closing quote (no space, end of line, carriage return, etc., allowed) and (3) each function must be preceded by "ggplot2::" (for instance: "ggplot2::coord_flip()). If the character string contains the "ggplot2::theme" string, then internal ggplot2 theme() and theme_classic() functions will be inactivated to be reused by add. BEWARE: handle this argument with caution since added functions can create conflicts with the preexisting internal ggplot2 functions.}

\item{warn.print}{logical. Print warnings at the end of the execution? No print if no warning messages.}

\item{lib.path}{absolute path of the required packages, if not in the default folders.}

\item{safer_check}{Single logical value. Perform some "safer" checks (see https://github.com/safer-r)? If TRUE, checkings are performed before main code running: 1) R classical operators (like "<-") not overwritten by another package because of the R scope and 2) required functions and related packages effectively present in local R lybraries. Must be set to FALSE if this fonction is used inside another "safer" function to avoid pointless multiple checkings.}
}
\value{
a heatmap if plot argument is TRUE; a list of the graph info if return argument is TRUE:$data: a list of the graphic info; $axes: a list of the axes info; $warn: the warning messages. Use cat() for proper display. NULL if no warning.
}
\description{
ggplot2 heatmap with the possibility to overlay a mask, see also: draw : http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization same range; scale : https://stackoverflow.com/questions/44655723/r-ggplot2-heatmap-fixed-scale-color-between-graphs; for ggplot2 specifications, see: https://ggplot2.tidyverse.org/articles/ggplot2-specs.html
}
\details{
- NA and Inf values are displayed as grey.
- when using limit1 all values out of the range of limit1 are also displayed as grey.
}
\examples{
gg_heatmap(data1 = matrix(1:16, ncol = 4), title = "GRAPH 1")
gg_heatmap(data1 = matrix(1:16, ncol = 4), return = TRUE)
gg_heatmap(data1 = matrix(1:16, ncol = 4), legend.name1 = "VALUE", title = "GRAPH 1", text.size = 5, data2 = matrix(rep(c(1,0,0,0), 4), ncol = 4), invert2 = FALSE, return = TRUE)
# diagonal matrix
gg_heatmap(data1 = matrix(c(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1), ncol = 4))
gg_heatmap(data1 = reshape2::melt(matrix(c(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1), ncol = 4)))
\dontrun{
# Error messages
gg_heatmap(data1 = matrix(1:16, ncol = 4), data2 = matrix(rep(c(1,0,0,0), 5), ncol = 5))
}
gg_heatmap(data1 = matrix(1:16, ncol = 4), data2 = reshape2::melt(matrix(rep(c(1,0,0,0), 4), ncol = 4)))
gg_heatmap(data1 = reshape2::melt(matrix(1:16, ncol = 4)), data2 = reshape2::melt(matrix(rep(c(1,0,0,0), 4), ncol = 4)))
}
